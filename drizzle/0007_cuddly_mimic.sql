CREATE TABLE `agenda_sessions` (
	`id` text PRIMARY KEY NOT NULL,
	`event_id` text NOT NULL,
	`title` text NOT NULL,
	`description` text,
	`type` text NOT NULL,
	`start_time` integer NOT NULL,
	`end_time` integer NOT NULL,
	`day` integer NOT NULL,
	`location` text,
	`room` text,
	`capacity` integer,
	`speaker_ids` text,
	`speaker_names` text,
	`status` text DEFAULT 'draft' NOT NULL,
	`tags` text,
	`materials` text,
	`is_public` integer DEFAULT true NOT NULL,
	`requires_registration` integer DEFAULT false NOT NULL,
	`registration_count` integer DEFAULT 0,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`event_id`) REFERENCES `events`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `session_registrations` (
	`id` text PRIMARY KEY NOT NULL,
	`session_id` text NOT NULL,
	`participant_id` text NOT NULL,
	`participant_name` text NOT NULL,
	`participant_email` text,
	`registered_at` integer DEFAULT (unixepoch()) NOT NULL,
	`status` text DEFAULT 'registered' NOT NULL,
	`attended_at` integer,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`session_id`) REFERENCES `agenda_sessions`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `budget_categories` (
	`id` text PRIMARY KEY NOT NULL,
	`event_id` text NOT NULL,
	`name` text NOT NULL,
	`description` text,
	`budget_allocated` real NOT NULL,
	`budget_spent` real DEFAULT 0 NOT NULL,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`event_id`) REFERENCES `events`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `budget_items` (
	`id` text PRIMARY KEY NOT NULL,
	`category_id` text NOT NULL,
	`name` text NOT NULL,
	`description` text,
	`estimated_cost` real NOT NULL,
	`actual_cost` real,
	`quantity` integer DEFAULT 1 NOT NULL,
	`status` text DEFAULT 'planned' NOT NULL,
	`vendor_name` text,
	`invoice_number` text,
	`invoice_date` integer,
	`payment_date` integer,
	`payment_method` text,
	`notes` text,
	`attachments` text,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`category_id`) REFERENCES `budget_categories`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `checkins` (
	`id` text PRIMARY KEY NOT NULL,
	`event_id` text NOT NULL,
	`person_id` text NOT NULL,
	`person_type` text NOT NULL,
	`person_name` text NOT NULL,
	`person_email` text,
	`checked_in_at` integer NOT NULL,
	`checked_in_by` text,
	`checkout_at` integer,
	`status` text DEFAULT 'checked_in' NOT NULL,
	`verification_method` text DEFAULT 'manual' NOT NULL,
	`verification_code` text,
	`notes` text,
	`badge_printed` integer DEFAULT false NOT NULL,
	`materials_provided` text,
	`location_id` text,
	`location_name` text,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`event_id`) REFERENCES `events`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `communications` (
	`id` text PRIMARY KEY NOT NULL,
	`event_id` text NOT NULL,
	`title` text NOT NULL,
	`content` text NOT NULL,
	`type` text NOT NULL,
	`recipient_type` text NOT NULL,
	`recipient_filter` text,
	`recipient_count` integer DEFAULT 0,
	`scheduled_at` integer,
	`sent_at` integer,
	`status` text DEFAULT 'draft' NOT NULL,
	`open_count` integer DEFAULT 0,
	`click_count` integer DEFAULT 0,
	`bounce_count` integer DEFAULT 0,
	`attachments` text,
	`metadata` text,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`event_id`) REFERENCES `events`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `deadlines` (
	`id` text PRIMARY KEY NOT NULL,
	`event_id` text NOT NULL,
	`title` text NOT NULL,
	`description` text,
	`due_date` integer NOT NULL,
	`category` text NOT NULL,
	`priority` text DEFAULT 'medium' NOT NULL,
	`status` text DEFAULT 'pending' NOT NULL,
	`completed_at` integer,
	`completed_by` text,
	`reminder_days` integer DEFAULT 7,
	`notification_sent` integer DEFAULT false NOT NULL,
	`notes` text,
	`attachments` text,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`event_id`) REFERENCES `events`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `events` (
	`id` text PRIMARY KEY NOT NULL,
	`name` text NOT NULL,
	`type` text NOT NULL,
	`description` text,
	`location` text NOT NULL,
	`start_date` integer NOT NULL,
	`end_date` integer NOT NULL,
	`capacity` integer NOT NULL,
	`registered_count` integer DEFAULT 0 NOT NULL,
	`budget` real NOT NULL,
	`spent` real DEFAULT 0 NOT NULL,
	`status` text DEFAULT 'draft' NOT NULL,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	`deleted_at` integer
);
--> statement-breakpoint
CREATE TABLE `participants` (
	`id` text PRIMARY KEY NOT NULL,
	`event_id` text NOT NULL,
	`first_name` text NOT NULL,
	`last_name` text NOT NULL,
	`email` text NOT NULL,
	`phone` text,
	`company` text,
	`job_title` text,
	`registration_date` integer DEFAULT (unixepoch()) NOT NULL,
	`status` text DEFAULT 'registered' NOT NULL,
	`checked_in` integer DEFAULT false NOT NULL,
	`checkin_time` integer,
	`notes` text,
	`dietary_requirements` text,
	`special_needs` text,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`event_id`) REFERENCES `events`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `speakers` (
	`id` text PRIMARY KEY NOT NULL,
	`event_id` text NOT NULL,
	`first_name` text NOT NULL,
	`last_name` text NOT NULL,
	`email` text NOT NULL,
	`phone` text,
	`company` text,
	`job_title` text,
	`bio` text,
	`photo_url` text,
	`presentation_title` text,
	`presentation_description` text,
	`presentation_duration` integer,
	`presentation_date` integer,
	`presentation_slot` text,
	`status` text DEFAULT 'invited' NOT NULL,
	`notes` text,
	`travel_arrangements` text,
	`accommodation_needs` text,
	`dietary_requirements` text,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`event_id`) REFERENCES `events`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `sponsors` (
	`id` text PRIMARY KEY NOT NULL,
	`event_id` text NOT NULL,
	`name` text NOT NULL,
	`type` text NOT NULL,
	`logo_url` text,
	`website` text,
	`contact_name` text,
	`contact_email` text NOT NULL,
	`contact_phone` text,
	`amount` real NOT NULL,
	`benefits` text,
	`booth_location` text,
	`booth_size` text,
	`status` text DEFAULT 'prospect' NOT NULL,
	`invoice_number` text,
	`invoice_date` integer,
	`payment_date` integer,
	`payment_method` text,
	`notes` text,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`event_id`) REFERENCES `events`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `services` (
	`id` text PRIMARY KEY NOT NULL,
	`event_id` text NOT NULL,
	`name` text NOT NULL,
	`type` text NOT NULL,
	`description` text,
	`provider_name` text NOT NULL,
	`provider_contact` text,
	`provider_email` text,
	`provider_phone` text,
	`cost` real NOT NULL,
	`is_paid` integer DEFAULT false NOT NULL,
	`payment_date` integer,
	`invoice_number` text,
	`scheduled_date` integer,
	`scheduled_start_time` text,
	`scheduled_end_time` text,
	`status` text DEFAULT 'requested' NOT NULL,
	`notes` text,
	`attachments` text,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`event_id`) REFERENCES `events`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `survey_responses` (
	`id` text PRIMARY KEY NOT NULL,
	`survey_id` text NOT NULL,
	`respondent_id` text,
	`respondent_type` text,
	`respondent_email` text,
	`answers` text NOT NULL,
	`completed_at` integer NOT NULL,
	`ip_address` text,
	`user_agent` text,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`survey_id`) REFERENCES `surveys`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `surveys` (
	`id` text PRIMARY KEY NOT NULL,
	`event_id` text NOT NULL,
	`title` text NOT NULL,
	`description` text,
	`type` text NOT NULL,
	`status` text DEFAULT 'draft' NOT NULL,
	`start_date` integer,
	`end_date` integer,
	`is_anonymous` integer DEFAULT false NOT NULL,
	`allow_multiple_responses` integer DEFAULT false NOT NULL,
	`questions` text NOT NULL,
	`response_count` integer DEFAULT 0,
	`completion_rate` real DEFAULT 0,
	`average_rating` real,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer DEFAULT (unixepoch()) NOT NULL,
	FOREIGN KEY (`event_id`) REFERENCES `events`(`id`) ON UPDATE no action ON DELETE cascade
);
